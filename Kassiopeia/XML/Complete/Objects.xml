<!-- this file contains an annotated list of all the objects available in kassiopeia 3.0 -->
<!-- you can run this file through kassiopeia built with debug messages on to see the objects being added and removed from the toolbox -->

<messages>

	<message key="ks_object" terminal="debug" log="normal"/>

</messages>

<kassiopeia>

	<!-- test objects to investigate using commands -->

	<kstraj_trajectory_exact name="trajectory_exact"/>
	<kstraj_control_cyclotron name="control_cyclotron" fraction="{ 1. / 16. }"/>

	<ks_command_member name="command_add_cyclotron" parent="trajectory_exact" field="add_control" child="control_cyclotron"/>
	<ks_command_member name="command_remove_cyclotron" parent="trajectory_exact" field="remove_control" child="control_cyclotron"/>
	<!--
		description:
			command object encapsulating a request to combine or change simulation objects.
			given an instance of a kassiopeia object, a string can be given to it to request a command.
			if a matching association between the string and a member function of the parent's class is found, a command is created which binds the parent, its member, and a given child object together.
			typically commands come in add/remove or set/clear pairs which compose objects together as in the example, or get/set pairs by which an object's configuration may be altered.

		parameters:
			name:
				the name of the resulting command object.

			parent:
				the name of the parent object.

			field:
				the name of the parent class member to use.
				available members depend completely on the parent's final type.

			child:
				the name of the child object to bind with the member.
	-->
	
	<!-- command members can also be written in a simpler form -->
	<add_control parent="trajectory_exact" child="control_cyclotron"/>
	<remove_control parent="trajectory_exact" child="control_cyclotron"/>
	
	<!-- if no parent is specified, the corresponding root object is used as parent -->
	<add_trajectory child="trajcetory_exact"/>
	
	

	<!-- output objects -->

	<output name="step_final_particle" parent="step" field="final_particle"/>
	<output name="step_final_particle_position" parent="step_final_particle" field="position"/>
	<output name="step_final_particle_position_z" parent="step_final_particle_position" field="z"/>
	<!--
		description:
			component object encapsulating the extraction of a component from within a composite.
			given an instance of a kassiopeia object, a string can be given to it to request a component.
			if a matching association between the string and a member function of the parent's class is found, a component is created which binds the result of calling the member function of the parent into a kassiopeia object.
			typically components are built from getter functions, and may be chained together as in the example above.

		parameters:
			name:
				the name of the extracted component.

			parent:
				the name of the composite.

			field:
				the name of the class member to use.
				available members depend completely on the parent's final type.
	-->

	<output_group name="component_group">
		<output name="step_final_particle_nested" parent="step" field="final_particle"/>
		<output name="step_final_particle_position_nested" parent="step_final_particle" field="position"/>
		<output name="step_final_particle_position_z_nested" parent="step_final_particle_position" field="z"/>
	</output_group>
	<!--
		description:
			a set of components treated a single composite.

		name:
			the name of this group.

		elements:
			output:
				adds a component member to the group.

	-->

	<output_integral name="step_final_particle_position_z_integral" parent="step_final_particle_position_z"/>
	<!--
		description:
			an integral of a component over some set of simulation events.

		parameters:
			name:
				the name of this component.

			parent:
				the name of the integrand.
				must have appeared in the file above its point of reference.
	-->

	<output_maximum name="step_final_particle_position_z_maximum" parent="step_final_particle_position_z"/>
	<!--
		description:
			the maximum value attained by a component over some set of simulation events.

		parameters:
			name:
				the name of this component.

			parent:
				the name of the analyzed component.
				must have appeared in the file above its point of reference.
	-->

	<output_minimum name="step_final_particle_position_z_minimum" parent="step_final_particle_position_z"/>
	<!--
		description:
			the minimum value attained by a component over some set of simulation events.

		parameters:
			name:
				the name of this component.

			parent:
				the name of the analyzed component.
				must have appeared in the file above its point of reference.
	-->

	<output_maximum_at name="step_final_particle_position_z_maximum_position" parent="step_final_particle_position" source="step_final_particle_position_z"/>
	<!--
		description:
			the value of a component where a source component attains a maximum value over some set of simulation events.

		parameters:
			name:
				the name of this component.

			parent:
				the name of the output component.
				must have appeared in the file above its point of reference.

			source:
				the name of the analyzed source component.
				must have appeared in the file above its point of reference.
	-->

	<output_minimum_at name="step_final_particle_position_z_minimum_position" parent="step_final_particle_position" source="step_final_particle_position_z"/>
	<!--
		description:
			the value of a component where a source component attains a minimum value over some set of simulation events.

		parameters:
			name:
				the name of this component.

			parent:
				the name of the output component.
				must have appeared in the file above its point of reference.

			source:
				the name of the analyzed source component.
				must have appeared in the file above its point of reference.
	-->



</kassiopeia>
